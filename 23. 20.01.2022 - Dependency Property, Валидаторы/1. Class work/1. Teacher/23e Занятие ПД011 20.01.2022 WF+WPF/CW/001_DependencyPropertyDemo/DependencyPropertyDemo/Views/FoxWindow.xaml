<Window x:Class="DependencyPropertyDemo.Views.FoxWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DependencyPropertyDemo"
        xmlns:models="clr-namespace:DependencyPropertyDemo.Models"
        mc:Ignorable="d"
        Title="Свойства зависимостей класса Fox" Height="320" Width="600" 
        FontSize="16" FontFamily="Verdana"
        Background="FloralWhite"
        ShowInTaskbar="False" WindowStartupLocation="CenterScreen" 
        ResizeMode="NoResize" Closing="Window_Closing">
    
    <Window.Resources>
        <!-- local:ТипДаннх x:Key = "ИмяРесурса" свойства ресурса -->
        <models:Fox x:Key="Foxy"   Title="Фокси" Weight="12.5" Age="7" />
    </Window.Resources>

    <!-- 
        !!! Привязка ресурса Foxy к Grid
        DataContext="{StaticResource Foxy}" такая привязка означает, что Grid знает 
        о ресурсе Foxy все, и элементы управления в гриде тоже  -->
    <Grid DataContext="{StaticResource Foxy}"> 
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="30*"/>
        </Grid.ColumnDefinitions>

        <!--#region левая сторона формы ввода - подсказки -->
        <TextBlock Grid.Row="0" Text="Кличка лисы:" 
            Margin="20 10" 
            MaxHeight="30" TextAlignment="Right"/>
        <TextBlock Grid.Row="1" Grid.Column="0" Text="Возраст в годах:"  
            Margin="20 10" MaxHeight="30" 
            TextAlignment="Right"/>
        <TextBlock Grid.Row="2" Grid.Column="0" Text="Вес в кг:"  
            Margin="20 10" 
            MaxHeight="30" TextAlignment="Right"/>
        <!--#endregion-->

        <!-- 
        это строки ввода для изменения значений свойств 
        UpdateSourceTrigger=PropertyChanged - этот параметр задает режим обновления
        привязанных данных. В значении PropertyChanged изменения TextBox без задержек
        передаются в связанное свойство объекта
        TextBox.Text - по умолчанию , UpdateSourceTrigger=LostFocus
        -->
        
        <TextBox Grid.Row="0" Grid.Column="1" 
                 Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Margin="10" MaxHeight="30" />

        <TextBox Grid.Row="1" Grid.Column="1" 
                 Text="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Margin="10" MaxHeight="30" TextAlignment="Right"/>

        <TextBox Grid.Row="2" Grid.Column="1" 
                 Text="{Binding Weight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 Margin="10" MaxHeight="30" TextAlignment="Right"/>
        
        <!-- 
        это текстовые элементы для отображения значений свойств объекта, полученного из ресурса
        для TextBlock применять UpdateSourceTrigger смысла нет
        -->
        <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Title}"  
            Margin="20,10" MaxHeight="30" TextAlignment="Left"/>

        <!--  
        Форматирование значений - задается аналогично C# {0:допСимволы}
        Если надо начать с формата, то вначале пишем {}
        В зависимости от типа элемента доступны различные типы форматировщиков значений:
        StringFormat            :  для класса Binding 
        ContentStringFormat     :  для классов ContentControl, ContentPresenter, TabControl
        ItemStringFormat        :  для класса ItemsControl      
        HeaderStringFormat      :  для класса HeaderContentControl
        ColumnHeaderStringFormat:  для классов GridView, GridViewHeaderRowPresenter     
        SelectionBoxItemStringFormat:  для классов ComboBox, RibbonComboBox
        -->

        <TextBlock Grid.Row="1" Grid.Column="2" 
                   Text="{Binding Age, StringFormat={}{0:n3}}"  
            Margin="20,10" MaxHeight="30" TextAlignment="Left"/>


        <TextBlock Grid.Row="2" Grid.Column="2" 
            Text="{Binding Weight, StringFormat=в кг: {0:f3}}"  
            Margin="20,10" MaxHeight="30" TextAlignment="Left"/>
        
        <!-- добавим кнопки для увеличения/уменьшения возраста и веса лисы -->
        <Button Name="BtnUp" Grid.Row="3" Grid.Column="0" Margin="20, 10, 10, 10" MaxHeight="35" 
                Background="GreenYellow"
                Content="Увеличить вес" Click="BtnUp_Click"/>
        <Button Name="BtnDown" Grid.Row="3" Grid.Column="2" Margin="10, 10, 20, 10" MaxHeight="35" 
                Background="NavajoWhite"
                Content="Уменьшить вес" Click="BtnDown_Click"/>
    </Grid>
</Window>
